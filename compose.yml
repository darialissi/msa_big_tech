services:

  auth:
    container_name: auth_service
    build:
      context: ./auth
    ports:
      - "8083:50053"
    networks:
      - app-network
    depends_on:
      - auth_postgres

  auth_postgres:
    image: postgres:latest
    container_name: auth_postgres
    env_file:
      - ./auth/.env
    ports:
      - 5433:5432
    networks:
      - app-network

  chat:
    container_name: chat_service
    build:
      context: ./chat
    ports:
      - "8084:50054"
    networks:
      - app-network
    depends_on:
      - chat_migrations

  chat_postgres:
    image: postgres:latest
    container_name: chat_postgres
    env_file:
      - ./chat/.env
    ports:
      - 5434:5432
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
      
  chat_migrations:
    build:
      context: ./chat
      dockerfile: Dockerfile.migrations
    env_file:
      - ./chat/.env
    networks:
      - app-network
    depends_on:
      chat_postgres:
        condition: service_healthy

  social:
    container_name: social_service
    build:
      context: ./social
    ports:
      - "8085:50055"
    networks:
      - app-network
    depends_on:
      - social_migrations

  social_postgres:
    image: postgres:latest
    container_name: social_postgres
    env_file:
      - ./social/.env
    ports:
      - 5435:5432
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
      
  social_migrations:
    build:
      context: ./social
      dockerfile: Dockerfile.migrations
    env_file:
      - ./social/.env
    networks:
      - app-network
    depends_on:
      social_postgres:
        condition: service_healthy

  users:
    container_name: users_service
    build:
      context: ./users
    ports:
      - "8086:50056"
    networks:
      - app-network
    depends_on:
      - users_postgres

  users_postgres:
    image: postgres:latest
    container_name: users_postgres
    env_file:
      - ./users/.env
    ports:
      - 5436:5432
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
      
  users_migrations:
    build:
      context: ./users
      dockerfile: Dockerfile.migrations
    env_file:
      - ./users/.env
    networks:
      - app-network
    depends_on:
      users_postgres:
        condition: service_healthy

  gateway:
    container_name: gateway_service
    build:
      context: ./gateway
    ports:
      - "8087:50057"
    networks:
      - app-network
    depends_on:
      - auth
      - chat
      - social
      - users


# Определяем общую сеть
networks:
  app-network:
    driver: bridge